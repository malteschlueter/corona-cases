name: Tests

on:
    push:
    pull_request:

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2

            -   name: Validate composer.json and composer.lock
                run: composer validate

            -   name: Cache Composer packages
                id: composer-cache
                uses: actions/cache@v2
                with:
                    path: vendor
                    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-

            -   name: Install php dependencies
                if: steps.composer-cache.outputs.cache-hit != 'true'
                run: composer install --prefer-dist --no-progress

            -   name: Install phpunit
                run: php bin/phpunit install

            -   name: Clear cache
                run: php bin/console cache:clear

            -   name: Archive application
                run: >
                    cd ..
                    && tar -czf corona-cases.tar.gz --exclude=".git" --exclude="node_modules" corona-cases
                    && mv corona-cases.tar.gz corona-cases/corona-cases.tar.gz

            -   name: Upload prepared application
                uses: actions/upload-artifact@v2
                with:
                    name: applicationArchive
                    path: corona-cases.tar.gz

    lint:
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Download prepared application
                uses: actions/download-artifact@v2
                with:
                    name: applicationArchive

            -   name: Unpack application
                run: tar -xzf corona-cases.tar.gz --strip=1

            -   name: Validate container
                run: php bin/console lint:container

            -   name: Validate yaml files
                run: php bin/console lint:yaml config --parse-tags

#    php-cs-fixer:
#        runs-on: ubuntu-latest
#        needs: build
#        steps:
#            -   name: Download prepared application
#                uses: actions/download-artifact@v2
#                with:
#                    name: applicationArchive
#
#            -   name: Unpack application
#                run: tar -xzf corona-cases.tar.gz --strip=1
#
#            -   name: Install php-cs-fixer
#                run: composer --working-dir=tools/php-cs-fixer install
#
#            -   name: Run php-cs-fixer
#                run: PHP_CS_FIXER_IGNORE_ENV=1 php tools/php-cs-fixer/vendor/bin/php-cs-fixer fix --diff --dry-run

    phpstan:
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Download prepared application
                uses: actions/download-artifact@v2
                with:
                    name: applicationArchive

            -   name: Unpack application
                run: tar -xzf corona-cases.tar.gz --strip=1

            -   name: Run phpstan
                run: php vendor/bin/phpstan analyze --error-format=github

    phpunit:
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Download prepared application
                uses: actions/download-artifact@v2
                with:
                    name: applicationArchive

            -   name: Unpack application
                run: tar -xzf corona-cases.tar.gz --strip=1

            -   name: Run test suite
                run: php bin/phpunit --coverage-text --coverage-html=coverage --log-junit=report.xml
